# import Address from './address.graphql'

directive @Model(
    name: String
) on OBJECT

directive @AutoGeneratedField on FIELD_DEFINITION

directive @Field on FIELD_DEFINITION

directive @ManyToOne(
    backref: String!
) on FIELD_DEFINITION

directive @OneToMany(
    backref: String!
) on FIELD_DEFINITION

directive @ManyToMany(
    backref: String!
) on FIELD_DEFINITION

directive @Entity on OBJECT
directive @Column(
    type: String
    length: Int
) on FIELD_DEFINITION

directive @EntityEnum on OBJECT

"A User"
type User @Entity(name: "user"){
    id: Int! @AutoGeneratedField
    first: String! @Column
    last: String! @Column(type: "string", length: 20)
    created: String! @Column
    updated: String! @Column
    #address: Address @ManyToOne(backref: "resident")
    books: [Book]! @ManyToMany(backref: "author")
    abookRequired: Book!
    abookNullable: Book
    fullName: String
}

type Book @Entity {
    id: Int! @Field
    authors: [User] @ManyToMany(backref: "books")
}

enum RequirementType @EntityEnum {
    Business
    Mission
    Both
}